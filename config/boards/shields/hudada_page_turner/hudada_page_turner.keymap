#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    // 1. 定义基础行为
    behaviors {
        // 为了让固件能够成功编译，我们暂时将其“伪装”成一个标准的按键行为(&kp)。
        // 这可以验证我们 keymap 的其余部分是正确的。
        // 最终，您需要创建实现自定义HID功能的C代码，并将 compatible 改回您自己的定义。
        pg: page_turner {
            compatible = "zmk,behavior-key-press";
            #binding-cells = <1>;
        };

        // 3. 定义一个 hold-tap 行为
        // 这个行为会引用下面 macros 中定义的具体动作
        down_ret: down_and_return {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <0>;
            tapping-term-ms = <200>; // 200ms 内松开为单击
            // 引用下面定义的两个宏，分别用于单击和长按
            bindings = <&macro_pg_dn>, <&macro_pg_ret>;
        };
    };

    // 2. 定义宏，作为 hold-tap 的具体动作
    macros {
        // 定义“下翻页”宏，它只做一件事：执行 &pg N2
        macro_pg_dn: page_down_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&pg N2>;
        };

        // 定义“返回”宏，它只做一件事：执行 &pg N3
        macro_pg_ret: page_return_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&pg N3>;
        };
    };

    // 4. 将行为应用到按键映射
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &pg N1    &down_ret
            >;
        };
    };
};